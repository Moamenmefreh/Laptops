// <auto-generated />
using Laptops.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Laptops.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241224172226_addUserTable")]
    partial class addUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LaptopUser", b =>
                {
                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.Property<int>("usersId")
                        .HasColumnType("int");

                    b.HasKey("LaptopId", "usersId");

                    b.HasIndex("usersId");

                    b.ToTable("LaptopUser");
                });

            modelBuilder.Entity("Laptops.Model.Laptop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("laptopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("processorId")
                        .HasColumnType("int");

                    b.Property<int>("ramId")
                        .HasColumnType("int");

                    b.Property<int>("storageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("processorId")
                        .IsUnique();

                    b.HasIndex("ramId")
                        .IsUnique();

                    b.HasIndex("storageId")
                        .IsUnique();

                    b.ToTable("Laptop");
                });

            modelBuilder.Entity("Laptops.Model.Processor", b =>
                {
                    b.Property<int>("processorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("processorId"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("processorId");

                    b.ToTable("Processors");
                });

            modelBuilder.Entity("Laptops.Model.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ram");
                });

            modelBuilder.Entity("Laptops.Model.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("storages");
                });

            modelBuilder.Entity("Laptops.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("laptopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LaptopUser", b =>
                {
                    b.HasOne("Laptops.Model.Laptop", null)
                        .WithMany()
                        .HasForeignKey("LaptopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laptops.Model.User", null)
                        .WithMany()
                        .HasForeignKey("usersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laptops.Model.Laptop", b =>
                {
                    b.HasOne("Laptops.Model.Processor", "Processor")
                        .WithOne("Laptop")
                        .HasForeignKey("Laptops.Model.Laptop", "processorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laptops.Model.Ram", "Ram")
                        .WithOne("Laptop")
                        .HasForeignKey("Laptops.Model.Laptop", "ramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laptops.Model.Storage", "Storage")
                        .WithOne("Laptop")
                        .HasForeignKey("Laptops.Model.Laptop", "storageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processor");

                    b.Navigation("Ram");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("Laptops.Model.Processor", b =>
                {
                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("Laptops.Model.Ram", b =>
                {
                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("Laptops.Model.Storage", b =>
                {
                    b.Navigation("Laptop");
                });
#pragma warning restore 612, 618
        }
    }
}
